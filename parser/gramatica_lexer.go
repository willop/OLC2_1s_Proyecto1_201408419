// Code generated from gramatica.g4 by ANTLR 4.9.3. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 70, 465,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 4, 63, 9, 63, 4, 64, 9, 64, 4, 65,
	9, 65, 4, 66, 9, 66, 4, 67, 9, 67, 4, 68, 9, 68, 4, 69, 9, 69, 3, 2, 3,
	2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 6, 3,
	6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10,
	3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3,
	16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21,
	3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 26, 3,
	26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 6, 31,
	206, 10, 31, 13, 31, 14, 31, 207, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3,
	32, 7, 32, 216, 10, 32, 12, 32, 14, 32, 219, 11, 32, 3, 32, 3, 32, 3, 32,
	3, 32, 3, 32, 3, 33, 3, 33, 3, 33, 3, 33, 7, 33, 230, 10, 33, 12, 33, 14,
	33, 233, 11, 33, 3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35,
	3, 35, 3, 35, 3, 36, 3, 36, 3, 36, 3, 36, 3, 37, 3, 37, 3, 37, 3, 37, 3,
	38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3, 40,
	3, 40, 3, 40, 3, 40, 3, 40, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3,
	41, 3, 41, 3, 41, 3, 41, 5, 41, 278, 10, 41, 3, 42, 3, 42, 3, 42, 3, 42,
	3, 42, 3, 42, 3, 43, 3, 43, 3, 43, 3, 43, 3, 44, 3, 44, 3, 44, 3, 44, 3,
	45, 3, 45, 3, 45, 3, 45, 3, 45, 3, 45, 3, 45, 3, 46, 3, 46, 3, 46, 3, 47,
	3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 48, 3, 48, 3,
	48, 3, 48, 3, 48, 3, 49, 3, 49, 3, 49, 3, 49, 3, 49, 3, 49, 3, 50, 3, 50,
	3, 50, 3, 51, 3, 51, 3, 51, 3, 51, 3, 51, 3, 51, 3, 51, 3, 52, 3, 52, 3,
	52, 3, 52, 3, 53, 3, 53, 3, 53, 3, 53, 3, 53, 3, 54, 3, 54, 3, 54, 3, 54,
	3, 54, 3, 54, 3, 54, 3, 54, 3, 54, 3, 54, 3, 54, 3, 54, 3, 55, 3, 55, 3,
	55, 3, 55, 3, 55, 3, 55, 3, 55, 3, 55, 3, 56, 3, 56, 3, 56, 3, 56, 3, 57,
	3, 57, 3, 57, 3, 57, 3, 58, 3, 58, 3, 58, 3, 58, 3, 58, 3, 59, 3, 59, 3,
	59, 3, 59, 3, 59, 3, 59, 3, 59, 3, 60, 3, 60, 3, 60, 3, 60, 3, 60, 3, 60,
	3, 60, 3, 60, 3, 60, 3, 61, 3, 61, 3, 61, 3, 61, 3, 61, 3, 61, 3, 61, 3,
	62, 3, 62, 3, 62, 3, 62, 3, 62, 3, 62, 3, 62, 3, 62, 3, 62, 3, 63, 3, 63,
	3, 63, 3, 63, 3, 63, 3, 63, 3, 63, 3, 63, 3, 63, 3, 63, 3, 63, 3, 63, 3,
	63, 3, 63, 3, 63, 3, 64, 6, 64, 424, 10, 64, 13, 64, 14, 64, 425, 3, 65,
	3, 65, 3, 65, 6, 65, 431, 10, 65, 13, 65, 14, 65, 432, 3, 65, 5, 65, 436,
	10, 65, 3, 66, 3, 66, 3, 66, 7, 66, 441, 10, 66, 12, 66, 14, 66, 444, 11,
	66, 3, 67, 3, 67, 3, 68, 3, 68, 7, 68, 450, 10, 68, 12, 68, 14, 68, 453,
	11, 68, 3, 68, 3, 68, 3, 69, 3, 69, 7, 69, 459, 10, 69, 12, 69, 14, 69,
	462, 11, 69, 3, 69, 3, 69, 3, 217, 2, 70, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7,
	13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31,
	17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49,
	26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67,
	35, 69, 36, 71, 37, 73, 38, 75, 39, 77, 40, 79, 41, 81, 42, 83, 43, 85,
	44, 87, 45, 89, 46, 91, 47, 93, 48, 95, 49, 97, 50, 99, 51, 101, 52, 103,
	53, 105, 54, 107, 55, 109, 56, 111, 57, 113, 58, 115, 59, 117, 60, 119,
	61, 121, 62, 123, 63, 125, 64, 127, 65, 129, 66, 131, 67, 133, 68, 135,
	69, 137, 70, 3, 2, 7, 5, 2, 11, 12, 15, 15, 34, 34, 4, 2, 12, 12, 15, 15,
	3, 2, 50, 59, 5, 2, 67, 92, 97, 97, 99, 124, 3, 2, 36, 36, 2, 475, 2, 3,
	3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11,
	3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2,
	19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2,
	2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2,
	2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2,
	2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3,
	2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57,
	3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2,
	65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2,
	2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2,
	2, 2, 81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2,
	2, 2, 2, 89, 3, 2, 2, 2, 2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2, 95, 3,
	2, 2, 2, 2, 97, 3, 2, 2, 2, 2, 99, 3, 2, 2, 2, 2, 101, 3, 2, 2, 2, 2, 103,
	3, 2, 2, 2, 2, 105, 3, 2, 2, 2, 2, 107, 3, 2, 2, 2, 2, 109, 3, 2, 2, 2,
	2, 111, 3, 2, 2, 2, 2, 113, 3, 2, 2, 2, 2, 115, 3, 2, 2, 2, 2, 117, 3,
	2, 2, 2, 2, 119, 3, 2, 2, 2, 2, 121, 3, 2, 2, 2, 2, 123, 3, 2, 2, 2, 2,
	125, 3, 2, 2, 2, 2, 127, 3, 2, 2, 2, 2, 129, 3, 2, 2, 2, 2, 131, 3, 2,
	2, 2, 2, 133, 3, 2, 2, 2, 2, 135, 3, 2, 2, 2, 2, 137, 3, 2, 2, 2, 3, 139,
	3, 2, 2, 2, 5, 142, 3, 2, 2, 2, 7, 145, 3, 2, 2, 2, 9, 148, 3, 2, 2, 2,
	11, 151, 3, 2, 2, 2, 13, 154, 3, 2, 2, 2, 15, 157, 3, 2, 2, 2, 17, 160,
	3, 2, 2, 2, 19, 162, 3, 2, 2, 2, 21, 164, 3, 2, 2, 2, 23, 166, 3, 2, 2,
	2, 25, 168, 3, 2, 2, 2, 27, 170, 3, 2, 2, 2, 29, 172, 3, 2, 2, 2, 31, 174,
	3, 2, 2, 2, 33, 176, 3, 2, 2, 2, 35, 178, 3, 2, 2, 2, 37, 180, 3, 2, 2,
	2, 39, 182, 3, 2, 2, 2, 41, 184, 3, 2, 2, 2, 43, 186, 3, 2, 2, 2, 45, 188,
	3, 2, 2, 2, 47, 190, 3, 2, 2, 2, 49, 192, 3, 2, 2, 2, 51, 194, 3, 2, 2,
	2, 53, 196, 3, 2, 2, 2, 55, 198, 3, 2, 2, 2, 57, 200, 3, 2, 2, 2, 59, 202,
	3, 2, 2, 2, 61, 205, 3, 2, 2, 2, 63, 211, 3, 2, 2, 2, 65, 225, 3, 2, 2,
	2, 67, 236, 3, 2, 2, 2, 69, 240, 3, 2, 2, 2, 71, 244, 3, 2, 2, 2, 73, 248,
	3, 2, 2, 2, 75, 252, 3, 2, 2, 2, 77, 257, 3, 2, 2, 2, 79, 262, 3, 2, 2,
	2, 81, 277, 3, 2, 2, 2, 83, 279, 3, 2, 2, 2, 85, 285, 3, 2, 2, 2, 87, 289,
	3, 2, 2, 2, 89, 293, 3, 2, 2, 2, 91, 300, 3, 2, 2, 2, 93, 303, 3, 2, 2,
	2, 95, 312, 3, 2, 2, 2, 97, 317, 3, 2, 2, 2, 99, 323, 3, 2, 2, 2, 101,
	326, 3, 2, 2, 2, 103, 333, 3, 2, 2, 2, 105, 337, 3, 2, 2, 2, 107, 342,
	3, 2, 2, 2, 109, 354, 3, 2, 2, 2, 111, 362, 3, 2, 2, 2, 113, 366, 3, 2,
	2, 2, 115, 370, 3, 2, 2, 2, 117, 375, 3, 2, 2, 2, 119, 382, 3, 2, 2, 2,
	121, 391, 3, 2, 2, 2, 123, 398, 3, 2, 2, 2, 125, 407, 3, 2, 2, 2, 127,
	423, 3, 2, 2, 2, 129, 427, 3, 2, 2, 2, 131, 437, 3, 2, 2, 2, 133, 445,
	3, 2, 2, 2, 135, 447, 3, 2, 2, 2, 137, 456, 3, 2, 2, 2, 139, 140, 7, 47,
	2, 2, 140, 141, 7, 64, 2, 2, 141, 4, 3, 2, 2, 2, 142, 143, 7, 126, 2, 2,
	143, 144, 7, 126, 2, 2, 144, 6, 3, 2, 2, 2, 145, 146, 7, 40, 2, 2, 146,
	147, 7, 40, 2, 2, 147, 8, 3, 2, 2, 2, 148, 149, 7, 63, 2, 2, 149, 150,
	7, 63, 2, 2, 150, 10, 3, 2, 2, 2, 151, 152, 7, 35, 2, 2, 152, 153, 7, 63,
	2, 2, 153, 12, 3, 2, 2, 2, 154, 155, 7, 64, 2, 2, 155, 156, 7, 63, 2, 2,
	156, 14, 3, 2, 2, 2, 157, 158, 7, 62, 2, 2, 158, 159, 7, 63, 2, 2, 159,
	16, 3, 2, 2, 2, 160, 161, 7, 125, 2, 2, 161, 18, 3, 2, 2, 2, 162, 163,
	7, 127, 2, 2, 163, 20, 3, 2, 2, 2, 164, 165, 7, 93, 2, 2, 165, 22, 3, 2,
	2, 2, 166, 167, 7, 95, 2, 2, 167, 24, 3, 2, 2, 2, 168, 169, 7, 60, 2, 2,
	169, 26, 3, 2, 2, 2, 170, 171, 7, 46, 2, 2, 171, 28, 3, 2, 2, 2, 172, 173,
	7, 61, 2, 2, 173, 30, 3, 2, 2, 2, 174, 175, 7, 62, 2, 2, 175, 32, 3, 2,
	2, 2, 176, 177, 7, 64, 2, 2, 177, 34, 3, 2, 2, 2, 178, 179, 7, 48, 2, 2,
	179, 36, 3, 2, 2, 2, 180, 181, 7, 42, 2, 2, 181, 38, 3, 2, 2, 2, 182, 183,
	7, 43, 2, 2, 183, 40, 3, 2, 2, 2, 184, 185, 7, 63, 2, 2, 185, 42, 3, 2,
	2, 2, 186, 187, 7, 45, 2, 2, 187, 44, 3, 2, 2, 2, 188, 189, 7, 47, 2, 2,
	189, 46, 3, 2, 2, 2, 190, 191, 7, 44, 2, 2, 191, 48, 3, 2, 2, 2, 192, 193,
	7, 49, 2, 2, 193, 50, 3, 2, 2, 2, 194, 195, 7, 39, 2, 2, 195, 52, 3, 2,
	2, 2, 196, 197, 7, 126, 2, 2, 197, 54, 3, 2, 2, 2, 198, 199, 7, 40, 2,
	2, 199, 56, 3, 2, 2, 2, 200, 201, 7, 35, 2, 2, 201, 58, 3, 2, 2, 2, 202,
	203, 7, 65, 2, 2, 203, 60, 3, 2, 2, 2, 204, 206, 9, 2, 2, 2, 205, 204,
	3, 2, 2, 2, 206, 207, 3, 2, 2, 2, 207, 205, 3, 2, 2, 2, 207, 208, 3, 2,
	2, 2, 208, 209, 3, 2, 2, 2, 209, 210, 8, 31, 2, 2, 210, 62, 3, 2, 2, 2,
	211, 212, 7, 49, 2, 2, 212, 213, 7, 44, 2, 2, 213, 217, 3, 2, 2, 2, 214,
	216, 11, 2, 2, 2, 215, 214, 3, 2, 2, 2, 216, 219, 3, 2, 2, 2, 217, 218,
	3, 2, 2, 2, 217, 215, 3, 2, 2, 2, 218, 220, 3, 2, 2, 2, 219, 217, 3, 2,
	2, 2, 220, 221, 7, 44, 2, 2, 221, 222, 7, 49, 2, 2, 222, 223, 3, 2, 2,
	2, 223, 224, 8, 32, 2, 2, 224, 64, 3, 2, 2, 2, 225, 226, 7, 49, 2, 2, 226,
	227, 7, 49, 2, 2, 227, 231, 3, 2, 2, 2, 228, 230, 10, 3, 2, 2, 229, 228,
	3, 2, 2, 2, 230, 233, 3, 2, 2, 2, 231, 229, 3, 2, 2, 2, 231, 232, 3, 2,
	2, 2, 232, 234, 3, 2, 2, 2, 233, 231, 3, 2, 2, 2, 234, 235, 8, 33, 2, 2,
	235, 66, 3, 2, 2, 2, 236, 237, 7, 107, 2, 2, 237, 238, 7, 56, 2, 2, 238,
	239, 7, 54, 2, 2, 239, 68, 3, 2, 2, 2, 240, 241, 7, 104, 2, 2, 241, 242,
	7, 56, 2, 2, 242, 243, 7, 54, 2, 2, 243, 70, 3, 2, 2, 2, 244, 245, 7, 114,
	2, 2, 245, 246, 7, 113, 2, 2, 246, 247, 7, 121, 2, 2, 247, 72, 3, 2, 2,
	2, 248, 249, 7, 120, 2, 2, 249, 250, 7, 103, 2, 2, 250, 251, 7, 101, 2,
	2, 251, 74, 3, 2, 2, 2, 252, 253, 7, 114, 2, 2, 253, 254, 7, 113, 2, 2,
	254, 255, 7, 121, 2, 2, 255, 256, 7, 104, 2, 2, 256, 76, 3, 2, 2, 2, 257,
	258, 7, 100, 2, 2, 258, 259, 7, 113, 2, 2, 259, 260, 7, 113, 2, 2, 260,
	261, 7, 110, 2, 2, 261, 78, 3, 2, 2, 2, 262, 263, 7, 101, 2, 2, 263, 264,
	7, 106, 2, 2, 264, 265, 7, 99, 2, 2, 265, 266, 7, 116, 2, 2, 266, 80, 3,
	2, 2, 2, 267, 268, 7, 40, 2, 2, 268, 269, 7, 117, 2, 2, 269, 270, 7, 118,
	2, 2, 270, 278, 7, 116, 2, 2, 271, 272, 7, 85, 2, 2, 272, 273, 7, 118,
	2, 2, 273, 274, 7, 116, 2, 2, 274, 275, 7, 107, 2, 2, 275, 276, 7, 112,
	2, 2, 276, 278, 7, 105, 2, 2, 277, 267, 3, 2, 2, 2, 277, 271, 3, 2, 2,
	2, 278, 82, 3, 2, 2, 2, 279, 280, 7, 119, 2, 2, 280, 281, 7, 117, 2, 2,
	281, 282, 7, 107, 2, 2, 282, 283, 7, 124, 2, 2, 283, 284, 7, 103, 2, 2,
	284, 84, 3, 2, 2, 2, 285, 286, 7, 110, 2, 2, 286, 287, 7, 103, 2, 2, 287,
	288, 7, 118, 2, 2, 288, 86, 3, 2, 2, 2, 289, 290, 7, 111, 2, 2, 290, 291,
	7, 119, 2, 2, 291, 292, 7, 118, 2, 2, 292, 88, 3, 2, 2, 2, 293, 294, 7,
	117, 2, 2, 294, 295, 7, 118, 2, 2, 295, 296, 7, 116, 2, 2, 296, 297, 7,
	119, 2, 2, 297, 298, 7, 101, 2, 2, 298, 299, 7, 118, 2, 2, 299, 90, 3,
	2, 2, 2, 300, 301, 7, 99, 2, 2, 301, 302, 7, 117, 2, 2, 302, 92, 3, 2,
	2, 2, 303, 304, 7, 114, 2, 2, 304, 305, 7, 116, 2, 2, 305, 306, 7, 107,
	2, 2, 306, 307, 7, 112, 2, 2, 307, 308, 7, 118, 2, 2, 308, 309, 7, 110,
	2, 2, 309, 310, 7, 112, 2, 2, 310, 311, 7, 35, 2, 2, 311, 94, 3, 2, 2,
	2, 312, 313, 7, 118, 2, 2, 313, 314, 7, 116, 2, 2, 314, 315, 7, 119, 2,
	2, 315, 316, 7, 103, 2, 2, 316, 96, 3, 2, 2, 2, 317, 318, 7, 104, 2, 2,
	318, 319, 7, 99, 2, 2, 319, 320, 7, 110, 2, 2, 320, 321, 7, 117, 2, 2,
	321, 322, 7, 103, 2, 2, 322, 98, 3, 2, 2, 2, 323, 324, 7, 104, 2, 2, 324,
	325, 7, 112, 2, 2, 325, 100, 3, 2, 2, 2, 326, 327, 7, 116, 2, 2, 327, 328,
	7, 103, 2, 2, 328, 329, 7, 118, 2, 2, 329, 330, 7, 119, 2, 2, 330, 331,
	7, 116, 2, 2, 331, 332, 7, 112, 2, 2, 332, 102, 3, 2, 2, 2, 333, 334, 7,
	99, 2, 2, 334, 335, 7, 100, 2, 2, 335, 336, 7, 117, 2, 2, 336, 104, 3,
	2, 2, 2, 337, 338, 7, 117, 2, 2, 338, 339, 7, 115, 2, 2, 339, 340, 7, 116,
	2, 2, 340, 341, 7, 118, 2, 2, 341, 106, 3, 2, 2, 2, 342, 343, 7, 118, 2,
	2, 343, 344, 7, 113, 2, 2, 344, 345, 7, 97, 2, 2, 345, 346, 7, 117, 2,
	2, 346, 347, 7, 118, 2, 2, 347, 348, 7, 116, 2, 2, 348, 349, 7, 107, 2,
	2, 349, 350, 7, 112, 2, 2, 350, 351, 7, 105, 2, 2, 351, 352, 7, 42, 2,
	2, 352, 353, 7, 43, 2, 2, 353, 108, 3, 2, 2, 2, 354, 355, 7, 101, 2, 2,
	355, 356, 7, 110, 2, 2, 356, 357, 7, 113, 2, 2, 357, 358, 7, 112, 2, 2,
	358, 359, 7, 103, 2, 2, 359, 360, 7, 42, 2, 2, 360, 361, 7, 43, 2, 2, 361,
	110, 3, 2, 2, 2, 362, 363, 7, 112, 2, 2, 363, 364, 7, 103, 2, 2, 364, 365,
	7, 121, 2, 2, 365, 112, 3, 2, 2, 2, 366, 367, 7, 110, 2, 2, 367, 368, 7,
	103, 2, 2, 368, 369, 7, 112, 2, 2, 369, 114, 3, 2, 2, 2, 370, 371, 7, 114,
	2, 2, 371, 372, 7, 119, 2, 2, 372, 373, 7, 117, 2, 2, 373, 374, 7, 106,
	2, 2, 374, 116, 3, 2, 2, 2, 375, 376, 7, 116, 2, 2, 376, 377, 7, 103, 2,
	2, 377, 378, 7, 111, 2, 2, 378, 379, 7, 113, 2, 2, 379, 380, 7, 120, 2,
	2, 380, 381, 7, 103, 2, 2, 381, 118, 3, 2, 2, 2, 382, 383, 7, 101, 2, 2,
	383, 384, 7, 113, 2, 2, 384, 385, 7, 112, 2, 2, 385, 386, 7, 118, 2, 2,
	386, 387, 7, 99, 2, 2, 387, 388, 7, 107, 2, 2, 388, 389, 7, 112, 2, 2,
	389, 390, 7, 117, 2, 2, 390, 120, 3, 2, 2, 2, 391, 392, 7, 107, 2, 2, 392,
	393, 7, 112, 2, 2, 393, 394, 7, 117, 2, 2, 394, 395, 7, 103, 2, 2, 395,
	396, 7, 116, 2, 2, 396, 397, 7, 118, 2, 2, 397, 122, 3, 2, 2, 2, 398, 399,
	7, 101, 2, 2, 399, 400, 7, 99, 2, 2, 400, 401, 7, 114, 2, 2, 401, 402,
	7, 99, 2, 2, 402, 403, 7, 101, 2, 2, 403, 404, 7, 107, 2, 2, 404, 405,
	7, 118, 2, 2, 405, 406, 7, 123, 2, 2, 406, 124, 3, 2, 2, 2, 407, 408, 7,
	121, 2, 2, 408, 409, 7, 107, 2, 2, 409, 410, 7, 118, 2, 2, 410, 411, 7,
	101, 2, 2, 411, 412, 7, 106, 2, 2, 412, 413, 7, 97, 2, 2, 413, 414, 7,
	101, 2, 2, 414, 415, 7, 99, 2, 2, 415, 416, 7, 114, 2, 2, 416, 417, 7,
	99, 2, 2, 417, 418, 7, 101, 2, 2, 418, 419, 7, 107, 2, 2, 419, 420, 7,
	118, 2, 2, 420, 421, 7, 123, 2, 2, 421, 126, 3, 2, 2, 2, 422, 424, 9, 4,
	2, 2, 423, 422, 3, 2, 2, 2, 424, 425, 3, 2, 2, 2, 425, 423, 3, 2, 2, 2,
	425, 426, 3, 2, 2, 2, 426, 128, 3, 2, 2, 2, 427, 435, 5, 127, 64, 2, 428,
	430, 7, 48, 2, 2, 429, 431, 5, 127, 64, 2, 430, 429, 3, 2, 2, 2, 431, 432,
	3, 2, 2, 2, 432, 430, 3, 2, 2, 2, 432, 433, 3, 2, 2, 2, 433, 436, 3, 2,
	2, 2, 434, 436, 7, 48, 2, 2, 435, 428, 3, 2, 2, 2, 435, 434, 3, 2, 2, 2,
	436, 130, 3, 2, 2, 2, 437, 442, 5, 133, 67, 2, 438, 441, 5, 133, 67, 2,
	439, 441, 5, 127, 64, 2, 440, 438, 3, 2, 2, 2, 440, 439, 3, 2, 2, 2, 441,
	444, 3, 2, 2, 2, 442, 440, 3, 2, 2, 2, 442, 443, 3, 2, 2, 2, 443, 132,
	3, 2, 2, 2, 444, 442, 3, 2, 2, 2, 445, 446, 9, 5, 2, 2, 446, 134, 3, 2,
	2, 2, 447, 451, 7, 36, 2, 2, 448, 450, 10, 6, 2, 2, 449, 448, 3, 2, 2,
	2, 450, 453, 3, 2, 2, 2, 451, 449, 3, 2, 2, 2, 451, 452, 3, 2, 2, 2, 452,
	454, 3, 2, 2, 2, 453, 451, 3, 2, 2, 2, 454, 455, 7, 36, 2, 2, 455, 136,
	3, 2, 2, 2, 456, 460, 7, 41, 2, 2, 457, 459, 10, 6, 2, 2, 458, 457, 3,
	2, 2, 2, 459, 462, 3, 2, 2, 2, 460, 458, 3, 2, 2, 2, 460, 461, 3, 2, 2,
	2, 461, 463, 3, 2, 2, 2, 462, 460, 3, 2, 2, 2, 463, 464, 7, 41, 2, 2, 464,
	138, 3, 2, 2, 2, 14, 2, 207, 217, 231, 277, 425, 432, 435, 440, 442, 451,
	460, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'->'", "'||'", "'&&'", "'=='", "'!='", "'>='", "'<='", "'{'", "'}'",
	"'['", "']'", "':'", "','", "';'", "'<'", "'>'", "'.'", "'('", "')'", "'='",
	"'+'", "'-'", "'*'", "'/'", "'%'", "'|'", "'&'", "'!'", "'?'", "", "",
	"", "'i64'", "'f64'", "'pow'", "'vec'", "'powf'", "'bool'", "'char'", "",
	"'usize'", "'let'", "'mut'", "'struct'", "'as'", "'println!'", "'true'",
	"'false'", "'fn'", "'return'", "'abs'", "'sqrt'", "'to_string()'", "'clone()'",
	"'new'", "'len'", "'push'", "'remove'", "'contains'", "'insert'", "'capacity'",
	"'witch_capacity'",
}

var lexerSymbolicNames = []string{
	"", "TK_flecha", "TK_or", "TK_and", "TK_igualacion", "TK_diferente", "TK_mayor_igual",
	"TK_menor_igual", "TK_corchete_apertura", "TK_corchete_cierre", "TK_llave_apertura",
	"TK_llave_cierre", "TK_dosPuntos", "TK_coma", "TK_pcoma", "TK_menor", "TK_mayor",
	"TK_punto", "TK_par_apertura", "TK_par_cierre", "TK_igual", "TK_suma",
	"TK_menos", "TK_por", "TK_diagonal", "TK_porcentaje", "TK_linea", "TK_amp",
	"TK_sig_admiracion", "TK_sig_interrogacion", "WHITESPACE", "TK_comentario_multi",
	"TK_comentario_lineal", "TKR_numericos_enteros", "TKR_numericos_flotantes",
	"TKR_pow", "TKR_vec", "TKR_powf", "TKR_bool", "TKR_char", "TKR_String",
	"TKR_usize", "TKR_let", "TKR_mut", "TKR_struct", "TKR_as", "TKR_println",
	"TKR_true", "TKR_false", "TKR_fn", "TKR_return", "TKR_abs", "TKR_sqrt",
	"TKR_to_string", "TKR_clone", "TKR_new", "TKR_len", "TKR_push", "TKR_remove",
	"TKR_contains", "TKR_insert", "TKR_capacity", "TKR_with_capacity", "TK_entero",
	"TK_decimal", "TK_id", "Letra", "TK_cadena", "TK_caracter",
}

var lexerRuleNames = []string{
	"TK_flecha", "TK_or", "TK_and", "TK_igualacion", "TK_diferente", "TK_mayor_igual",
	"TK_menor_igual", "TK_corchete_apertura", "TK_corchete_cierre", "TK_llave_apertura",
	"TK_llave_cierre", "TK_dosPuntos", "TK_coma", "TK_pcoma", "TK_menor", "TK_mayor",
	"TK_punto", "TK_par_apertura", "TK_par_cierre", "TK_igual", "TK_suma",
	"TK_menos", "TK_por", "TK_diagonal", "TK_porcentaje", "TK_linea", "TK_amp",
	"TK_sig_admiracion", "TK_sig_interrogacion", "WHITESPACE", "TK_comentario_multi",
	"TK_comentario_lineal", "TKR_numericos_enteros", "TKR_numericos_flotantes",
	"TKR_pow", "TKR_vec", "TKR_powf", "TKR_bool", "TKR_char", "TKR_String",
	"TKR_usize", "TKR_let", "TKR_mut", "TKR_struct", "TKR_as", "TKR_println",
	"TKR_true", "TKR_false", "TKR_fn", "TKR_return", "TKR_abs", "TKR_sqrt",
	"TKR_to_string", "TKR_clone", "TKR_new", "TKR_len", "TKR_push", "TKR_remove",
	"TKR_contains", "TKR_insert", "TKR_capacity", "TKR_with_capacity", "TK_entero",
	"TK_decimal", "TK_id", "Letra", "TK_cadena", "TK_caracter",
}

type gramaticaLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewgramaticaLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *gramaticaLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewgramaticaLexer(input antlr.CharStream) *gramaticaLexer {
	l := new(gramaticaLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "gramatica.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// gramaticaLexer tokens.
const (
	gramaticaLexerTK_flecha               = 1
	gramaticaLexerTK_or                   = 2
	gramaticaLexerTK_and                  = 3
	gramaticaLexerTK_igualacion           = 4
	gramaticaLexerTK_diferente            = 5
	gramaticaLexerTK_mayor_igual          = 6
	gramaticaLexerTK_menor_igual          = 7
	gramaticaLexerTK_corchete_apertura    = 8
	gramaticaLexerTK_corchete_cierre      = 9
	gramaticaLexerTK_llave_apertura       = 10
	gramaticaLexerTK_llave_cierre         = 11
	gramaticaLexerTK_dosPuntos            = 12
	gramaticaLexerTK_coma                 = 13
	gramaticaLexerTK_pcoma                = 14
	gramaticaLexerTK_menor                = 15
	gramaticaLexerTK_mayor                = 16
	gramaticaLexerTK_punto                = 17
	gramaticaLexerTK_par_apertura         = 18
	gramaticaLexerTK_par_cierre           = 19
	gramaticaLexerTK_igual                = 20
	gramaticaLexerTK_suma                 = 21
	gramaticaLexerTK_menos                = 22
	gramaticaLexerTK_por                  = 23
	gramaticaLexerTK_diagonal             = 24
	gramaticaLexerTK_porcentaje           = 25
	gramaticaLexerTK_linea                = 26
	gramaticaLexerTK_amp                  = 27
	gramaticaLexerTK_sig_admiracion       = 28
	gramaticaLexerTK_sig_interrogacion    = 29
	gramaticaLexerWHITESPACE              = 30
	gramaticaLexerTK_comentario_multi     = 31
	gramaticaLexerTK_comentario_lineal    = 32
	gramaticaLexerTKR_numericos_enteros   = 33
	gramaticaLexerTKR_numericos_flotantes = 34
	gramaticaLexerTKR_pow                 = 35
	gramaticaLexerTKR_vec                 = 36
	gramaticaLexerTKR_powf                = 37
	gramaticaLexerTKR_bool                = 38
	gramaticaLexerTKR_char                = 39
	gramaticaLexerTKR_String              = 40
	gramaticaLexerTKR_usize               = 41
	gramaticaLexerTKR_let                 = 42
	gramaticaLexerTKR_mut                 = 43
	gramaticaLexerTKR_struct              = 44
	gramaticaLexerTKR_as                  = 45
	gramaticaLexerTKR_println             = 46
	gramaticaLexerTKR_true                = 47
	gramaticaLexerTKR_false               = 48
	gramaticaLexerTKR_fn                  = 49
	gramaticaLexerTKR_return              = 50
	gramaticaLexerTKR_abs                 = 51
	gramaticaLexerTKR_sqrt                = 52
	gramaticaLexerTKR_to_string           = 53
	gramaticaLexerTKR_clone               = 54
	gramaticaLexerTKR_new                 = 55
	gramaticaLexerTKR_len                 = 56
	gramaticaLexerTKR_push                = 57
	gramaticaLexerTKR_remove              = 58
	gramaticaLexerTKR_contains            = 59
	gramaticaLexerTKR_insert              = 60
	gramaticaLexerTKR_capacity            = 61
	gramaticaLexerTKR_with_capacity       = 62
	gramaticaLexerTK_entero               = 63
	gramaticaLexerTK_decimal              = 64
	gramaticaLexerTK_id                   = 65
	gramaticaLexerLetra                   = 66
	gramaticaLexerTK_cadena               = 67
	gramaticaLexerTK_caracter             = 68
)
