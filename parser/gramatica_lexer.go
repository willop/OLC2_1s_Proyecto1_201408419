// Code generated from gramatica.g4 by ANTLR 4.9.3. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 78, 514,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 4, 63, 9, 63, 4, 64, 9, 64, 4, 65,
	9, 65, 4, 66, 9, 66, 4, 67, 9, 67, 4, 68, 9, 68, 4, 69, 9, 69, 4, 70, 9,
	70, 4, 71, 9, 71, 4, 72, 9, 72, 4, 73, 9, 73, 4, 74, 9, 74, 4, 75, 9, 75,
	4, 76, 9, 76, 4, 77, 9, 77, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 8, 3,
	8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3,
	13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18,
	3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3,
	24, 3, 24, 3, 25, 3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 29,
	3, 29, 3, 30, 3, 30, 3, 31, 6, 31, 222, 10, 31, 13, 31, 14, 31, 223, 3,
	31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 7, 32, 232, 10, 32, 12, 32, 14,
	32, 235, 11, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 33, 3, 33, 3, 33,
	3, 33, 7, 33, 246, 10, 33, 12, 33, 14, 33, 249, 11, 33, 3, 33, 3, 33, 3,
	34, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 35, 3, 36, 3, 36, 3, 36,
	3, 36, 3, 37, 3, 37, 3, 37, 3, 37, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3,
	39, 3, 39, 3, 39, 3, 39, 3, 39, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 41,
	3, 41, 3, 41, 3, 41, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3,
	43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 44, 3, 44, 3, 44, 3, 44, 3, 45,
	3, 45, 3, 45, 3, 45, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3,
	47, 3, 47, 3, 47, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48,
	3, 48, 3, 49, 3, 49, 3, 49, 3, 49, 3, 49, 3, 50, 3, 50, 3, 50, 3, 50, 3,
	50, 3, 50, 3, 51, 3, 51, 3, 51, 3, 52, 3, 52, 3, 52, 3, 52, 3, 52, 3, 52,
	3, 52, 3, 53, 3, 53, 3, 53, 3, 53, 3, 54, 3, 54, 3, 54, 3, 54, 3, 54, 3,
	55, 3, 55, 3, 55, 3, 55, 3, 55, 3, 55, 3, 55, 3, 55, 3, 55, 3, 55, 3, 56,
	3, 56, 3, 56, 3, 56, 3, 56, 3, 56, 3, 57, 3, 57, 3, 57, 3, 57, 3, 58, 3,
	58, 3, 58, 3, 58, 3, 59, 3, 59, 3, 59, 3, 59, 3, 59, 3, 60, 3, 60, 3, 60,
	3, 60, 3, 60, 3, 60, 3, 60, 3, 61, 3, 61, 3, 61, 3, 61, 3, 61, 3, 61, 3,
	61, 3, 61, 3, 61, 3, 62, 3, 62, 3, 62, 3, 62, 3, 62, 3, 62, 3, 62, 3, 63,
	3, 63, 3, 63, 3, 63, 3, 63, 3, 63, 3, 63, 3, 63, 3, 63, 3, 64, 3, 64, 3,
	64, 3, 64, 3, 64, 3, 64, 3, 64, 3, 64, 3, 64, 3, 64, 3, 64, 3, 64, 3, 64,
	3, 64, 3, 64, 3, 65, 3, 65, 3, 65, 3, 65, 3, 65, 3, 66, 3, 66, 3, 66, 3,
	67, 3, 67, 3, 67, 3, 67, 3, 67, 3, 67, 3, 67, 3, 67, 3, 68, 3, 68, 3, 68,
	3, 68, 3, 68, 3, 69, 3, 69, 3, 69, 3, 69, 3, 69, 3, 69, 3, 70, 3, 70, 3,
	70, 3, 70, 3, 70, 3, 70, 3, 71, 3, 71, 3, 71, 3, 71, 3, 71, 3, 72, 6, 72,
	473, 10, 72, 13, 72, 14, 72, 474, 3, 73, 3, 73, 3, 73, 6, 73, 480, 10,
	73, 13, 73, 14, 73, 481, 3, 73, 5, 73, 485, 10, 73, 3, 74, 3, 74, 3, 74,
	7, 74, 490, 10, 74, 12, 74, 14, 74, 493, 11, 74, 3, 75, 3, 75, 3, 76, 3,
	76, 7, 76, 499, 10, 76, 12, 76, 14, 76, 502, 11, 76, 3, 76, 3, 76, 3, 77,
	3, 77, 7, 77, 508, 10, 77, 12, 77, 14, 77, 511, 11, 77, 3, 77, 3, 77, 3,
	233, 2, 78, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11,
	21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20,
	39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29,
	57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 37, 73, 38,
	75, 39, 77, 40, 79, 41, 81, 42, 83, 43, 85, 44, 87, 45, 89, 46, 91, 47,
	93, 48, 95, 49, 97, 50, 99, 51, 101, 52, 103, 53, 105, 54, 107, 55, 109,
	56, 111, 57, 113, 58, 115, 59, 117, 60, 119, 61, 121, 62, 123, 63, 125,
	64, 127, 65, 129, 66, 131, 67, 133, 68, 135, 69, 137, 70, 139, 71, 141,
	72, 143, 73, 145, 74, 147, 75, 149, 76, 151, 77, 153, 78, 3, 2, 7, 5, 2,
	11, 12, 15, 15, 34, 34, 4, 2, 12, 12, 15, 15, 3, 2, 50, 59, 5, 2, 67, 92,
	97, 97, 99, 124, 3, 2, 36, 36, 2, 523, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2,
	2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2,
	2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3,
	2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29,
	3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2,
	37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2,
	2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2,
	2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2,
	2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3,
	2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75,
	3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2,
	83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2,
	2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97, 3, 2, 2,
	2, 2, 99, 3, 2, 2, 2, 2, 101, 3, 2, 2, 2, 2, 103, 3, 2, 2, 2, 2, 105, 3,
	2, 2, 2, 2, 107, 3, 2, 2, 2, 2, 109, 3, 2, 2, 2, 2, 111, 3, 2, 2, 2, 2,
	113, 3, 2, 2, 2, 2, 115, 3, 2, 2, 2, 2, 117, 3, 2, 2, 2, 2, 119, 3, 2,
	2, 2, 2, 121, 3, 2, 2, 2, 2, 123, 3, 2, 2, 2, 2, 125, 3, 2, 2, 2, 2, 127,
	3, 2, 2, 2, 2, 129, 3, 2, 2, 2, 2, 131, 3, 2, 2, 2, 2, 133, 3, 2, 2, 2,
	2, 135, 3, 2, 2, 2, 2, 137, 3, 2, 2, 2, 2, 139, 3, 2, 2, 2, 2, 141, 3,
	2, 2, 2, 2, 143, 3, 2, 2, 2, 2, 145, 3, 2, 2, 2, 2, 147, 3, 2, 2, 2, 2,
	149, 3, 2, 2, 2, 2, 151, 3, 2, 2, 2, 2, 153, 3, 2, 2, 2, 3, 155, 3, 2,
	2, 2, 5, 158, 3, 2, 2, 2, 7, 161, 3, 2, 2, 2, 9, 164, 3, 2, 2, 2, 11, 167,
	3, 2, 2, 2, 13, 170, 3, 2, 2, 2, 15, 173, 3, 2, 2, 2, 17, 176, 3, 2, 2,
	2, 19, 178, 3, 2, 2, 2, 21, 180, 3, 2, 2, 2, 23, 182, 3, 2, 2, 2, 25, 184,
	3, 2, 2, 2, 27, 186, 3, 2, 2, 2, 29, 188, 3, 2, 2, 2, 31, 190, 3, 2, 2,
	2, 33, 192, 3, 2, 2, 2, 35, 194, 3, 2, 2, 2, 37, 196, 3, 2, 2, 2, 39, 198,
	3, 2, 2, 2, 41, 200, 3, 2, 2, 2, 43, 202, 3, 2, 2, 2, 45, 204, 3, 2, 2,
	2, 47, 206, 3, 2, 2, 2, 49, 208, 3, 2, 2, 2, 51, 210, 3, 2, 2, 2, 53, 212,
	3, 2, 2, 2, 55, 214, 3, 2, 2, 2, 57, 216, 3, 2, 2, 2, 59, 218, 3, 2, 2,
	2, 61, 221, 3, 2, 2, 2, 63, 227, 3, 2, 2, 2, 65, 241, 3, 2, 2, 2, 67, 252,
	3, 2, 2, 2, 69, 256, 3, 2, 2, 2, 71, 260, 3, 2, 2, 2, 73, 264, 3, 2, 2,
	2, 75, 268, 3, 2, 2, 2, 77, 273, 3, 2, 2, 2, 79, 278, 3, 2, 2, 2, 81, 283,
	3, 2, 2, 2, 83, 287, 3, 2, 2, 2, 85, 294, 3, 2, 2, 2, 87, 300, 3, 2, 2,
	2, 89, 304, 3, 2, 2, 2, 91, 308, 3, 2, 2, 2, 93, 315, 3, 2, 2, 2, 95, 318,
	3, 2, 2, 2, 97, 327, 3, 2, 2, 2, 99, 332, 3, 2, 2, 2, 101, 338, 3, 2, 2,
	2, 103, 341, 3, 2, 2, 2, 105, 348, 3, 2, 2, 2, 107, 352, 3, 2, 2, 2, 109,
	357, 3, 2, 2, 2, 111, 367, 3, 2, 2, 2, 113, 373, 3, 2, 2, 2, 115, 377,
	3, 2, 2, 2, 117, 381, 3, 2, 2, 2, 119, 386, 3, 2, 2, 2, 121, 393, 3, 2,
	2, 2, 123, 402, 3, 2, 2, 2, 125, 409, 3, 2, 2, 2, 127, 418, 3, 2, 2, 2,
	129, 433, 3, 2, 2, 2, 131, 438, 3, 2, 2, 2, 133, 441, 3, 2, 2, 2, 135,
	449, 3, 2, 2, 2, 137, 454, 3, 2, 2, 2, 139, 460, 3, 2, 2, 2, 141, 466,
	3, 2, 2, 2, 143, 472, 3, 2, 2, 2, 145, 476, 3, 2, 2, 2, 147, 486, 3, 2,
	2, 2, 149, 494, 3, 2, 2, 2, 151, 496, 3, 2, 2, 2, 153, 505, 3, 2, 2, 2,
	155, 156, 7, 47, 2, 2, 156, 157, 7, 64, 2, 2, 157, 4, 3, 2, 2, 2, 158,
	159, 7, 126, 2, 2, 159, 160, 7, 126, 2, 2, 160, 6, 3, 2, 2, 2, 161, 162,
	7, 40, 2, 2, 162, 163, 7, 40, 2, 2, 163, 8, 3, 2, 2, 2, 164, 165, 7, 63,
	2, 2, 165, 166, 7, 63, 2, 2, 166, 10, 3, 2, 2, 2, 167, 168, 7, 35, 2, 2,
	168, 169, 7, 63, 2, 2, 169, 12, 3, 2, 2, 2, 170, 171, 7, 64, 2, 2, 171,
	172, 7, 63, 2, 2, 172, 14, 3, 2, 2, 2, 173, 174, 7, 62, 2, 2, 174, 175,
	7, 63, 2, 2, 175, 16, 3, 2, 2, 2, 176, 177, 7, 125, 2, 2, 177, 18, 3, 2,
	2, 2, 178, 179, 7, 127, 2, 2, 179, 20, 3, 2, 2, 2, 180, 181, 7, 93, 2,
	2, 181, 22, 3, 2, 2, 2, 182, 183, 7, 95, 2, 2, 183, 24, 3, 2, 2, 2, 184,
	185, 7, 60, 2, 2, 185, 26, 3, 2, 2, 2, 186, 187, 7, 46, 2, 2, 187, 28,
	3, 2, 2, 2, 188, 189, 7, 61, 2, 2, 189, 30, 3, 2, 2, 2, 190, 191, 7, 62,
	2, 2, 191, 32, 3, 2, 2, 2, 192, 193, 7, 64, 2, 2, 193, 34, 3, 2, 2, 2,
	194, 195, 7, 48, 2, 2, 195, 36, 3, 2, 2, 2, 196, 197, 7, 42, 2, 2, 197,
	38, 3, 2, 2, 2, 198, 199, 7, 43, 2, 2, 199, 40, 3, 2, 2, 2, 200, 201, 7,
	63, 2, 2, 201, 42, 3, 2, 2, 2, 202, 203, 7, 45, 2, 2, 203, 44, 3, 2, 2,
	2, 204, 205, 7, 47, 2, 2, 205, 46, 3, 2, 2, 2, 206, 207, 7, 44, 2, 2, 207,
	48, 3, 2, 2, 2, 208, 209, 7, 49, 2, 2, 209, 50, 3, 2, 2, 2, 210, 211, 7,
	39, 2, 2, 211, 52, 3, 2, 2, 2, 212, 213, 7, 126, 2, 2, 213, 54, 3, 2, 2,
	2, 214, 215, 7, 40, 2, 2, 215, 56, 3, 2, 2, 2, 216, 217, 7, 35, 2, 2, 217,
	58, 3, 2, 2, 2, 218, 219, 7, 65, 2, 2, 219, 60, 3, 2, 2, 2, 220, 222, 9,
	2, 2, 2, 221, 220, 3, 2, 2, 2, 222, 223, 3, 2, 2, 2, 223, 221, 3, 2, 2,
	2, 223, 224, 3, 2, 2, 2, 224, 225, 3, 2, 2, 2, 225, 226, 8, 31, 2, 2, 226,
	62, 3, 2, 2, 2, 227, 228, 7, 49, 2, 2, 228, 229, 7, 44, 2, 2, 229, 233,
	3, 2, 2, 2, 230, 232, 11, 2, 2, 2, 231, 230, 3, 2, 2, 2, 232, 235, 3, 2,
	2, 2, 233, 234, 3, 2, 2, 2, 233, 231, 3, 2, 2, 2, 234, 236, 3, 2, 2, 2,
	235, 233, 3, 2, 2, 2, 236, 237, 7, 44, 2, 2, 237, 238, 7, 49, 2, 2, 238,
	239, 3, 2, 2, 2, 239, 240, 8, 32, 2, 2, 240, 64, 3, 2, 2, 2, 241, 242,
	7, 49, 2, 2, 242, 243, 7, 49, 2, 2, 243, 247, 3, 2, 2, 2, 244, 246, 10,
	3, 2, 2, 245, 244, 3, 2, 2, 2, 246, 249, 3, 2, 2, 2, 247, 245, 3, 2, 2,
	2, 247, 248, 3, 2, 2, 2, 248, 250, 3, 2, 2, 2, 249, 247, 3, 2, 2, 2, 250,
	251, 8, 33, 2, 2, 251, 66, 3, 2, 2, 2, 252, 253, 7, 107, 2, 2, 253, 254,
	7, 56, 2, 2, 254, 255, 7, 54, 2, 2, 255, 68, 3, 2, 2, 2, 256, 257, 7, 104,
	2, 2, 257, 258, 7, 56, 2, 2, 258, 259, 7, 54, 2, 2, 259, 70, 3, 2, 2, 2,
	260, 261, 7, 114, 2, 2, 261, 262, 7, 113, 2, 2, 262, 263, 7, 121, 2, 2,
	263, 72, 3, 2, 2, 2, 264, 265, 7, 120, 2, 2, 265, 266, 7, 103, 2, 2, 266,
	267, 7, 101, 2, 2, 267, 74, 3, 2, 2, 2, 268, 269, 7, 114, 2, 2, 269, 270,
	7, 113, 2, 2, 270, 271, 7, 121, 2, 2, 271, 272, 7, 104, 2, 2, 272, 76,
	3, 2, 2, 2, 273, 274, 7, 100, 2, 2, 274, 275, 7, 113, 2, 2, 275, 276, 7,
	113, 2, 2, 276, 277, 7, 110, 2, 2, 277, 78, 3, 2, 2, 2, 278, 279, 7, 101,
	2, 2, 279, 280, 7, 106, 2, 2, 280, 281, 7, 99, 2, 2, 281, 282, 7, 116,
	2, 2, 282, 80, 3, 2, 2, 2, 283, 284, 7, 117, 2, 2, 284, 285, 7, 118, 2,
	2, 285, 286, 7, 116, 2, 2, 286, 82, 3, 2, 2, 2, 287, 288, 7, 85, 2, 2,
	288, 289, 7, 118, 2, 2, 289, 290, 7, 116, 2, 2, 290, 291, 7, 107, 2, 2,
	291, 292, 7, 112, 2, 2, 292, 293, 7, 105, 2, 2, 293, 84, 3, 2, 2, 2, 294,
	295, 7, 119, 2, 2, 295, 296, 7, 117, 2, 2, 296, 297, 7, 107, 2, 2, 297,
	298, 7, 124, 2, 2, 298, 299, 7, 103, 2, 2, 299, 86, 3, 2, 2, 2, 300, 301,
	7, 110, 2, 2, 301, 302, 7, 103, 2, 2, 302, 303, 7, 118, 2, 2, 303, 88,
	3, 2, 2, 2, 304, 305, 7, 111, 2, 2, 305, 306, 7, 119, 2, 2, 306, 307, 7,
	118, 2, 2, 307, 90, 3, 2, 2, 2, 308, 309, 7, 117, 2, 2, 309, 310, 7, 118,
	2, 2, 310, 311, 7, 116, 2, 2, 311, 312, 7, 119, 2, 2, 312, 313, 7, 101,
	2, 2, 313, 314, 7, 118, 2, 2, 314, 92, 3, 2, 2, 2, 315, 316, 7, 99, 2,
	2, 316, 317, 7, 117, 2, 2, 317, 94, 3, 2, 2, 2, 318, 319, 7, 114, 2, 2,
	319, 320, 7, 116, 2, 2, 320, 321, 7, 107, 2, 2, 321, 322, 7, 112, 2, 2,
	322, 323, 7, 118, 2, 2, 323, 324, 7, 110, 2, 2, 324, 325, 7, 112, 2, 2,
	325, 326, 7, 35, 2, 2, 326, 96, 3, 2, 2, 2, 327, 328, 7, 118, 2, 2, 328,
	329, 7, 116, 2, 2, 329, 330, 7, 119, 2, 2, 330, 331, 7, 103, 2, 2, 331,
	98, 3, 2, 2, 2, 332, 333, 7, 104, 2, 2, 333, 334, 7, 99, 2, 2, 334, 335,
	7, 110, 2, 2, 335, 336, 7, 117, 2, 2, 336, 337, 7, 103, 2, 2, 337, 100,
	3, 2, 2, 2, 338, 339, 7, 104, 2, 2, 339, 340, 7, 112, 2, 2, 340, 102, 3,
	2, 2, 2, 341, 342, 7, 116, 2, 2, 342, 343, 7, 103, 2, 2, 343, 344, 7, 118,
	2, 2, 344, 345, 7, 119, 2, 2, 345, 346, 7, 116, 2, 2, 346, 347, 7, 112,
	2, 2, 347, 104, 3, 2, 2, 2, 348, 349, 7, 99, 2, 2, 349, 350, 7, 100, 2,
	2, 350, 351, 7, 117, 2, 2, 351, 106, 3, 2, 2, 2, 352, 353, 7, 117, 2, 2,
	353, 354, 7, 115, 2, 2, 354, 355, 7, 116, 2, 2, 355, 356, 7, 118, 2, 2,
	356, 108, 3, 2, 2, 2, 357, 358, 7, 118, 2, 2, 358, 359, 7, 113, 2, 2, 359,
	360, 7, 97, 2, 2, 360, 361, 7, 117, 2, 2, 361, 362, 7, 118, 2, 2, 362,
	363, 7, 116, 2, 2, 363, 364, 7, 107, 2, 2, 364, 365, 7, 112, 2, 2, 365,
	366, 7, 105, 2, 2, 366, 110, 3, 2, 2, 2, 367, 368, 7, 101, 2, 2, 368, 369,
	7, 110, 2, 2, 369, 370, 7, 113, 2, 2, 370, 371, 7, 112, 2, 2, 371, 372,
	7, 103, 2, 2, 372, 112, 3, 2, 2, 2, 373, 374, 7, 112, 2, 2, 374, 375, 7,
	103, 2, 2, 375, 376, 7, 121, 2, 2, 376, 114, 3, 2, 2, 2, 377, 378, 7, 110,
	2, 2, 378, 379, 7, 103, 2, 2, 379, 380, 7, 112, 2, 2, 380, 116, 3, 2, 2,
	2, 381, 382, 7, 114, 2, 2, 382, 383, 7, 119, 2, 2, 383, 384, 7, 117, 2,
	2, 384, 385, 7, 106, 2, 2, 385, 118, 3, 2, 2, 2, 386, 387, 7, 116, 2, 2,
	387, 388, 7, 103, 2, 2, 388, 389, 7, 111, 2, 2, 389, 390, 7, 113, 2, 2,
	390, 391, 7, 120, 2, 2, 391, 392, 7, 103, 2, 2, 392, 120, 3, 2, 2, 2, 393,
	394, 7, 101, 2, 2, 394, 395, 7, 113, 2, 2, 395, 396, 7, 112, 2, 2, 396,
	397, 7, 118, 2, 2, 397, 398, 7, 99, 2, 2, 398, 399, 7, 107, 2, 2, 399,
	400, 7, 112, 2, 2, 400, 401, 7, 117, 2, 2, 401, 122, 3, 2, 2, 2, 402, 403,
	7, 107, 2, 2, 403, 404, 7, 112, 2, 2, 404, 405, 7, 117, 2, 2, 405, 406,
	7, 103, 2, 2, 406, 407, 7, 116, 2, 2, 407, 408, 7, 118, 2, 2, 408, 124,
	3, 2, 2, 2, 409, 410, 7, 101, 2, 2, 410, 411, 7, 99, 2, 2, 411, 412, 7,
	114, 2, 2, 412, 413, 7, 99, 2, 2, 413, 414, 7, 101, 2, 2, 414, 415, 7,
	107, 2, 2, 415, 416, 7, 118, 2, 2, 416, 417, 7, 123, 2, 2, 417, 126, 3,
	2, 2, 2, 418, 419, 7, 121, 2, 2, 419, 420, 7, 107, 2, 2, 420, 421, 7, 118,
	2, 2, 421, 422, 7, 101, 2, 2, 422, 423, 7, 106, 2, 2, 423, 424, 7, 97,
	2, 2, 424, 425, 7, 101, 2, 2, 425, 426, 7, 99, 2, 2, 426, 427, 7, 114,
	2, 2, 427, 428, 7, 99, 2, 2, 428, 429, 7, 101, 2, 2, 429, 430, 7, 107,
	2, 2, 430, 431, 7, 118, 2, 2, 431, 432, 7, 123, 2, 2, 432, 128, 3, 2, 2,
	2, 433, 434, 7, 111, 2, 2, 434, 435, 7, 99, 2, 2, 435, 436, 7, 107, 2,
	2, 436, 437, 7, 112, 2, 2, 437, 130, 3, 2, 2, 2, 438, 439, 7, 107, 2, 2,
	439, 440, 7, 104, 2, 2, 440, 132, 3, 2, 2, 2, 441, 442, 7, 103, 2, 2, 442,
	443, 7, 110, 2, 2, 443, 444, 7, 117, 2, 2, 444, 445, 7, 103, 2, 2, 445,
	446, 7, 34, 2, 2, 446, 447, 7, 107, 2, 2, 447, 448, 7, 104, 2, 2, 448,
	134, 3, 2, 2, 2, 449, 450, 7, 103, 2, 2, 450, 451, 7, 110, 2, 2, 451, 452,
	7, 117, 2, 2, 452, 453, 7, 103, 2, 2, 453, 136, 3, 2, 2, 2, 454, 455, 7,
	121, 2, 2, 455, 456, 7, 106, 2, 2, 456, 457, 7, 107, 2, 2, 457, 458, 7,
	110, 2, 2, 458, 459, 7, 103, 2, 2, 459, 138, 3, 2, 2, 2, 460, 461, 7, 100,
	2, 2, 461, 462, 7, 116, 2, 2, 462, 463, 7, 103, 2, 2, 463, 464, 7, 99,
	2, 2, 464, 465, 7, 109, 2, 2, 465, 140, 3, 2, 2, 2, 466, 467, 7, 110, 2,
	2, 467, 468, 7, 113, 2, 2, 468, 469, 7, 113, 2, 2, 469, 470, 7, 114, 2,
	2, 470, 142, 3, 2, 2, 2, 471, 473, 9, 4, 2, 2, 472, 471, 3, 2, 2, 2, 473,
	474, 3, 2, 2, 2, 474, 472, 3, 2, 2, 2, 474, 475, 3, 2, 2, 2, 475, 144,
	3, 2, 2, 2, 476, 484, 5, 143, 72, 2, 477, 479, 7, 48, 2, 2, 478, 480, 5,
	143, 72, 2, 479, 478, 3, 2, 2, 2, 480, 481, 3, 2, 2, 2, 481, 479, 3, 2,
	2, 2, 481, 482, 3, 2, 2, 2, 482, 485, 3, 2, 2, 2, 483, 485, 7, 48, 2, 2,
	484, 477, 3, 2, 2, 2, 484, 483, 3, 2, 2, 2, 485, 146, 3, 2, 2, 2, 486,
	491, 5, 149, 75, 2, 487, 490, 5, 149, 75, 2, 488, 490, 5, 143, 72, 2, 489,
	487, 3, 2, 2, 2, 489, 488, 3, 2, 2, 2, 490, 493, 3, 2, 2, 2, 491, 489,
	3, 2, 2, 2, 491, 492, 3, 2, 2, 2, 492, 148, 3, 2, 2, 2, 493, 491, 3, 2,
	2, 2, 494, 495, 9, 5, 2, 2, 495, 150, 3, 2, 2, 2, 496, 500, 7, 36, 2, 2,
	497, 499, 10, 6, 2, 2, 498, 497, 3, 2, 2, 2, 499, 502, 3, 2, 2, 2, 500,
	498, 3, 2, 2, 2, 500, 501, 3, 2, 2, 2, 501, 503, 3, 2, 2, 2, 502, 500,
	3, 2, 2, 2, 503, 504, 7, 36, 2, 2, 504, 152, 3, 2, 2, 2, 505, 509, 7, 41,
	2, 2, 506, 508, 10, 6, 2, 2, 507, 506, 3, 2, 2, 2, 508, 511, 3, 2, 2, 2,
	509, 507, 3, 2, 2, 2, 509, 510, 3, 2, 2, 2, 510, 512, 3, 2, 2, 2, 511,
	509, 3, 2, 2, 2, 512, 513, 7, 41, 2, 2, 513, 154, 3, 2, 2, 2, 13, 2, 223,
	233, 247, 474, 481, 484, 489, 491, 500, 509, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'->'", "'||'", "'&&'", "'=='", "'!='", "'>='", "'<='", "'{'", "'}'",
	"'['", "']'", "':'", "','", "';'", "'<'", "'>'", "'.'", "'('", "')'", "'='",
	"'+'", "'-'", "'*'", "'/'", "'%'", "'|'", "'&'", "'!'", "'?'", "", "",
	"", "'i64'", "'f64'", "'pow'", "'vec'", "'powf'", "'bool'", "'char'", "'str'",
	"'String'", "'usize'", "'let'", "'mut'", "'struct'", "'as'", "'println!'",
	"'true'", "'false'", "'fn'", "'return'", "'abs'", "'sqrt'", "'to_string'",
	"'clone'", "'new'", "'len'", "'push'", "'remove'", "'contains'", "'insert'",
	"'capacity'", "'witch_capacity'", "'main'", "'if'", "'else if'", "'else'",
	"'while'", "'break'", "'loop'",
}

var lexerSymbolicNames = []string{
	"", "TK_flecha", "TK_or", "TK_and", "TK_igualacion", "TK_diferente", "TK_mayor_igual",
	"TK_menor_igual", "TK_corchete_apertura", "TK_corchete_cierre", "TK_llave_apertura",
	"TK_llave_cierre", "TK_dosPuntos", "TK_coma", "TK_pcoma", "TK_menor", "TK_mayor",
	"TK_punto", "TK_par_apertura", "TK_par_cierre", "TK_igual", "TK_suma",
	"TK_menos", "TK_por", "TK_diagonal", "TK_porcentaje", "TK_linea", "TK_amp",
	"TK_sig_admiracion", "TK_sig_interrogacion", "WHITESPACE", "TK_comentario_multi",
	"TK_comentario_lineal", "TKR_numericos_enteros", "TKR_numericos_flotantes",
	"TKR_pow", "TKR_vec", "TKR_powf", "TKR_bool", "TKR_char", "TKR_Str", "TKR_String",
	"TKR_usize", "TKR_let", "TKR_mut", "TKR_struct", "TKR_as", "TKR_println",
	"TKR_true", "TKR_false", "TKR_fn", "TKR_return", "TKR_abs", "TKR_sqrt",
	"TKR_to_string", "TKR_clone", "TKR_new", "TKR_len", "TKR_push", "TKR_remove",
	"TKR_contains", "TKR_insert", "TKR_capacity", "TKR_with_capacity", "TKR_main",
	"TKR_if", "TKR_elseif", "TKR_else", "TKR_while", "TKR_break", "TKR_loop",
	"TK_entero", "TK_decimal", "TK_id", "Letra", "TK_cadena", "TK_caracter",
}

var lexerRuleNames = []string{
	"TK_flecha", "TK_or", "TK_and", "TK_igualacion", "TK_diferente", "TK_mayor_igual",
	"TK_menor_igual", "TK_corchete_apertura", "TK_corchete_cierre", "TK_llave_apertura",
	"TK_llave_cierre", "TK_dosPuntos", "TK_coma", "TK_pcoma", "TK_menor", "TK_mayor",
	"TK_punto", "TK_par_apertura", "TK_par_cierre", "TK_igual", "TK_suma",
	"TK_menos", "TK_por", "TK_diagonal", "TK_porcentaje", "TK_linea", "TK_amp",
	"TK_sig_admiracion", "TK_sig_interrogacion", "WHITESPACE", "TK_comentario_multi",
	"TK_comentario_lineal", "TKR_numericos_enteros", "TKR_numericos_flotantes",
	"TKR_pow", "TKR_vec", "TKR_powf", "TKR_bool", "TKR_char", "TKR_Str", "TKR_String",
	"TKR_usize", "TKR_let", "TKR_mut", "TKR_struct", "TKR_as", "TKR_println",
	"TKR_true", "TKR_false", "TKR_fn", "TKR_return", "TKR_abs", "TKR_sqrt",
	"TKR_to_string", "TKR_clone", "TKR_new", "TKR_len", "TKR_push", "TKR_remove",
	"TKR_contains", "TKR_insert", "TKR_capacity", "TKR_with_capacity", "TKR_main",
	"TKR_if", "TKR_elseif", "TKR_else", "TKR_while", "TKR_break", "TKR_loop",
	"TK_entero", "TK_decimal", "TK_id", "Letra", "TK_cadena", "TK_caracter",
}

type gramaticaLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewgramaticaLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *gramaticaLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewgramaticaLexer(input antlr.CharStream) *gramaticaLexer {
	l := new(gramaticaLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "gramatica.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// gramaticaLexer tokens.
const (
	gramaticaLexerTK_flecha               = 1
	gramaticaLexerTK_or                   = 2
	gramaticaLexerTK_and                  = 3
	gramaticaLexerTK_igualacion           = 4
	gramaticaLexerTK_diferente            = 5
	gramaticaLexerTK_mayor_igual          = 6
	gramaticaLexerTK_menor_igual          = 7
	gramaticaLexerTK_corchete_apertura    = 8
	gramaticaLexerTK_corchete_cierre      = 9
	gramaticaLexerTK_llave_apertura       = 10
	gramaticaLexerTK_llave_cierre         = 11
	gramaticaLexerTK_dosPuntos            = 12
	gramaticaLexerTK_coma                 = 13
	gramaticaLexerTK_pcoma                = 14
	gramaticaLexerTK_menor                = 15
	gramaticaLexerTK_mayor                = 16
	gramaticaLexerTK_punto                = 17
	gramaticaLexerTK_par_apertura         = 18
	gramaticaLexerTK_par_cierre           = 19
	gramaticaLexerTK_igual                = 20
	gramaticaLexerTK_suma                 = 21
	gramaticaLexerTK_menos                = 22
	gramaticaLexerTK_por                  = 23
	gramaticaLexerTK_diagonal             = 24
	gramaticaLexerTK_porcentaje           = 25
	gramaticaLexerTK_linea                = 26
	gramaticaLexerTK_amp                  = 27
	gramaticaLexerTK_sig_admiracion       = 28
	gramaticaLexerTK_sig_interrogacion    = 29
	gramaticaLexerWHITESPACE              = 30
	gramaticaLexerTK_comentario_multi     = 31
	gramaticaLexerTK_comentario_lineal    = 32
	gramaticaLexerTKR_numericos_enteros   = 33
	gramaticaLexerTKR_numericos_flotantes = 34
	gramaticaLexerTKR_pow                 = 35
	gramaticaLexerTKR_vec                 = 36
	gramaticaLexerTKR_powf                = 37
	gramaticaLexerTKR_bool                = 38
	gramaticaLexerTKR_char                = 39
	gramaticaLexerTKR_Str                 = 40
	gramaticaLexerTKR_String              = 41
	gramaticaLexerTKR_usize               = 42
	gramaticaLexerTKR_let                 = 43
	gramaticaLexerTKR_mut                 = 44
	gramaticaLexerTKR_struct              = 45
	gramaticaLexerTKR_as                  = 46
	gramaticaLexerTKR_println             = 47
	gramaticaLexerTKR_true                = 48
	gramaticaLexerTKR_false               = 49
	gramaticaLexerTKR_fn                  = 50
	gramaticaLexerTKR_return              = 51
	gramaticaLexerTKR_abs                 = 52
	gramaticaLexerTKR_sqrt                = 53
	gramaticaLexerTKR_to_string           = 54
	gramaticaLexerTKR_clone               = 55
	gramaticaLexerTKR_new                 = 56
	gramaticaLexerTKR_len                 = 57
	gramaticaLexerTKR_push                = 58
	gramaticaLexerTKR_remove              = 59
	gramaticaLexerTKR_contains            = 60
	gramaticaLexerTKR_insert              = 61
	gramaticaLexerTKR_capacity            = 62
	gramaticaLexerTKR_with_capacity       = 63
	gramaticaLexerTKR_main                = 64
	gramaticaLexerTKR_if                  = 65
	gramaticaLexerTKR_elseif              = 66
	gramaticaLexerTKR_else                = 67
	gramaticaLexerTKR_while               = 68
	gramaticaLexerTKR_break               = 69
	gramaticaLexerTKR_loop                = 70
	gramaticaLexerTK_entero               = 71
	gramaticaLexerTK_decimal              = 72
	gramaticaLexerTK_id                   = 73
	gramaticaLexerLetra                   = 74
	gramaticaLexerTK_cadena               = 75
	gramaticaLexerTK_caracter             = 76
)
